{
  "version": 3,
  "sources": ["../components/g2_accordion.ts", "../components/g2_button.ts", "../components/g2_checkbox.ts", "../components/g2_collapsible.ts", "../components/g2_color_picker.ts", "../components/g2_combobox.ts", "../components/g2_group.ts", "../components/g2_input_color.ts", "../components/g2_input_float.ts", "../components/g2_input_range.ts", "../components/g2_input_vector.ts", "../components/g2_panel.ts", "../components/g2_row.ts", "../components/g2_separator.ts", "../components/g2_spacer.ts", "../components/g2_title.ts", "../components/index.ts"],
  "sourcesContent": ["import { GuiCollapsible } from \"./g2_collapsible\";\r\nexport class GuiAccordion extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n    collapsibles : GuiCollapsible[] = [];\r\n    constructor(){\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n        const styles = String.raw`<style>\r\n\r\n        </style>`;\r\n        const template = String.raw`\r\n            ${styles}\r\n            <slot></slot>\r\n        `;\r\n        this.template_fragment = document.createRange().createContextualFragment(template);\r\n        this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n\r\n\r\n\r\n        \r\n    }\r\n    open(theone : GuiCollapsible) {\r\n        this.collapsibles.forEach((item, index)=>{\r\n            // console.log(item, index);\r\n            if(item !== theone){\r\n                item.setAttribute(\"closed\", \"true\");\r\n            }\r\n        })\r\n    }\r\n\r\n    connectedCallback(){\r\n        const slot = this.shadowRoot!.querySelector('slot') as HTMLSlotElement;\r\n        \r\n        this.collapsibles = [];\r\n        \r\n        slot?.addEventListener(\"slotchange\", ()=>{\r\n            for(let node of slot?.assignedNodes())\r\n            {\r\n                if(node.nodeName === 'GUI-COLLAPSIBLE'){\r\n\r\n                    let coll = node as GuiCollapsible;\r\n                    coll.addEventListener(\"open\", (ev : Event)=>{\r\n                        this.open(ev.target as GuiCollapsible)\r\n                    })\r\n                    // console.log(coll);\r\n                    \r\n                    this.collapsibles.push(coll);\r\n                }        \r\n            }\r\n        })\r\n    }\r\n\r\n    adoptedCallBack()\r\n    {\r\n        console.log(\"adopted\");   \r\n    }\r\n\r\n    static get observedAttributes(){\r\n        return [];\r\n    }\r\n\r\n\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any) {\r\n    \r\n    }\r\n}\r\ncustomElements.define(\"gui-accordion\", GuiAccordion);", "export class GuiButton extends HTMLElement {\r\n  template_fragment: DocumentFragment;\r\n  _label: string = \"Button Label\";\r\n  callback: Function = () => {};\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n    const styles = String.raw`<style>\r\n\r\n        :host{\r\n            width : 100%;\r\n        }\r\n            button{\r\n                padding : 0.5em 1em;\r\n                background-color : darkgreen;\r\n                color : white;\r\n                border : none;\r\n                width : 100%;\r\n                \r\n            }\r\n\r\n            button:hover{\r\n                background-color : green;\r\n            }\r\n            button:active{\r\n                background-color : darkgreen;\r\n            }\r\n        </style>`;\r\n    const template = String.raw`\r\n            ${styles}\r\n            <button>${this._label}</button>\r\n        `;\r\n    this.template_fragment = document\r\n      .createRange()\r\n      .createContextualFragment(template);\r\n    this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n    this.shadowRoot\r\n      ?.querySelector(\"button\")\r\n      ?.addEventListener(\"click\", () => this.callback());\r\n  }\r\n\r\n  connectedCallback() {}\r\n\r\n  get label() {\r\n    return this._label;\r\n  }\r\n  set label(str: string) {\r\n    (this.shadowRoot?.querySelector(\"button\") as HTMLButtonElement).innerText =\r\n      str;\r\n  }\r\n  static get observedAttributes() {\r\n    return [\"label\"];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\r\n    switch (name) {\r\n      case \"label\":\r\n        this.label = newValue;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\ncustomElements.define(\"gui-button\", GuiButton);\r\n", "export class GuiCheckbox extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n\r\n    _label : string = \"toggle\";\r\n    label_el : HTMLLabelElement;\r\n    pretty_el : HTMLDivElement;\r\n    value : boolean = true;\r\n    constructor(){\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n        const styles = String.raw`<style>\r\n            :host{\r\n                --padding-top : 0.3em;\r\n                --padding-bottom : 0.3em;\r\n                --padding-left : 0.5em;\r\n                --padding-right : 0.5em;\r\n            }\r\n            #wrapper{\r\n                display : flex;\r\n                align-items : center;\r\n                justify-content : center;\r\n                /* margin-top : 0.5em;\r\n                margin-bottom : 0.5em; */\r\n                /* padding-left : 0.5em;\r\n                padding-right : 0.5em; */\r\n\r\n                /* padding-top : var(--padding-top); */\r\n                /* padding-bottom : 0.1em; */\r\n            }\r\n            label{\r\n                display : flex;\r\n                flex : 1;\r\n                align-items : center;\r\n                /* justify-content : center; */\r\n                color : white;\r\n                background-color : grey;\r\n                padding-left : var(--padding-left);\r\n                padding-top : var(--padding-top);\r\n                padding-bottom : var(--padding-bottom);\r\n\r\n                border-radius : 3px 0 0 3px;\r\n                line-height : 1em;\r\n                width : 50%;\r\n                cursor : pointer;\r\n            }\r\n            label.checked{\r\n                background-color : green;\r\n            }\r\n            input[type=checkbox]\r\n            {\r\n                visibility : hidden;\r\n                display : none;\r\n            }\r\n            .pretty{\r\n                position : relative;\r\n                flex : 1;\r\n                height : 1em;\r\n                width : 50px;\r\n                background-color : white;\r\n                padding-top : var(--padding-top);\r\n                padding-bottom : var(--padding-bottom);\r\n\r\n                border-radius : 0px 3px 3px 0px;\r\n            }\r\n            .pretty.checked::after{\r\n                content : \"\";\r\n                position : absolute;\r\n                left : calc(50% - 30px/2);\r\n                top : 0;\r\n                width : 30px;\r\n                height : 10px;\r\n                /* background-color : red; */\r\n                border-radius : 0px 3px 3px 0px;\r\n                border : 10px solid #222;\r\n                border-top : none;\r\n                border-right : none;\r\n                transform-origin : 50% 50%;\r\n                transform : scale(0.6) rotate(-45deg) ;\r\n            }\r\n        </style>`;\r\n        const template = String.raw`\r\n            ${styles}\r\n\r\n            <div id=\"wrapper\">\r\n            <label for=\"checkbox\" class=\" ${this.value ? 'checked': ''}\">${this._label}</label>\r\n            <div class=\"pretty ${this.value ? 'checked': ''}\">\r\n            </div>\r\n            <input id=\"checkbox\" type=\"checkbox\" ${this.value ? 'checked': ''} />\r\n            </div>\r\n        `;\r\n        this.template_fragment = document.createRange().createContextualFragment(template);\r\n        this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n\r\n        this.label_el = this.shadowRoot!.querySelector(\"label\") as HTMLLabelElement;\r\n        this.pretty_el = this.shadowRoot!.querySelector(\".pretty\") as HTMLDivElement;\r\n\r\n        let checkbox = this.shadowRoot!.querySelector(\"#checkbox\") as HTMLInputElement;\r\n        checkbox.addEventListener(\"change\", (event : Event)=>{\r\n            let checkbox = (event.target as HTMLInputElement);\r\n            // console.log(event);\r\n            this.value = checkbox.toggleAttribute(\"checked\");\r\n            this.pretty_el.classList.toggle(\"checked\");\r\n            this.label_el.classList.toggle(\"checked\");\r\n            let ev = new Event(\"change\");\r\n            this.dispatchEvent(ev);\r\n        })\r\n    }\r\n\r\n\r\n    connectedCallback(){\r\n    }\r\n\r\n\r\n    static get observedAttributes(){\r\n        return [\"label\"];\r\n    }\r\n\r\n\r\n    set label(str : string)\r\n    {\r\n        if(this.label_el)\r\n        {\r\n            this.label_el.innerHTML = `<span>${str}</span>`\r\n        }\r\n    }\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any) {\r\n        switch(name)\r\n        {\r\n            case 'value':\r\n                this.value = newValue\r\n                break;\r\n            case 'label':\r\n                this.label = newValue\r\n                // this.label_el.innerText = newValue;\r\n                break;\r\n            default : break\r\n        }\r\n    }\r\n}\r\ncustomElements.define(\"gui-checkbox\", GuiCheckbox);", "export class GuiCollapsible extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n\r\n    closed : boolean = true;\r\n    _title : string = \"collaspible\";\r\n    header_el : HTMLDivElement;\r\n    arrow_el : HTMLDivElement;\r\n    content_el : HTMLDivElement;\r\n    title_el : HTMLSpanElement;\r\n    constructor(){\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n        const styles = String.raw`\r\n        <style>\r\n\r\n            .header{\r\n                display : flex;\r\n                align-items : center;\r\n                cursor : pointer;\r\n                background-color : #222;\r\n                margin : 0;\r\n                /* outline : 1px solid white; */\r\n                height : 2em;\r\n                margin-top : 0.25em;\r\n                padding-left : 0.5em; \r\n                font-weight : bolder;\r\n            }\r\n\r\n            .header:hover{\r\n                filter: brightness(1.2);\r\n            }\r\n\r\n            .header.closed{\r\n                font-weight : normal;\r\n            }\r\n            .content{\r\n                display : grid;\r\n                grid-template-rows : 1fr;\r\n                gap : 0.5em;\r\n                /* padding : 0.5em; */\r\n                padding : 0.5em;\r\n                /* overflow-y : hidden; */\r\n                /* height : auto; */\r\n                opacity : 1;\r\n                transform-origin : center top;\r\n                /* transform : scale3d(1.0, 1.0, 1.0); */\r\n\r\n                /* transition: grid-template-rows 0.2s ease-out; */\r\n                transition: all 0.2s ease-out;\r\n            }\r\n            .content.closed{\r\n                grid-template-rows : 0fr;\r\n                padding-top : 0;\r\n                padding-bottom : 0;\r\n            }\r\n\r\n            .arrow {\r\n                width: 0; \r\n                height: 0; \r\n                border-top: 10px solid transparent;\r\n                border-bottom: 10px solid transparent; \r\n                \r\n                border-left:10px solid white; \r\n                /* padding-right : 10px; */\r\n                transform-origin : 50% 50%;\r\n                margin-right : 20px;\r\n                transform : rotate(90deg);\r\n                transition : all 0.08s; \r\n                opacity : 1.0;\r\n            }\r\n            \r\n            .arrow.closed{\r\n                transform : rotate(0deg);\r\n                opacity : 0.5;\r\n            }\r\n\r\n            .inner {\r\n                overflow: hidden;\r\n                display : flex;\r\n                flex-direction : column;\r\n                gap : 1em;\r\n                /* width : 100%; */\r\n            }\r\n            \r\n        \r\n        </style>`;\r\n\r\n        this.closed = true;\r\n        const template = String.raw`\r\n            \r\n            ${styles}\r\n\r\n            <div class=\"wrapper\">\r\n                <div class=\"header\"><div class=\"arrow\" id=\"arrow\"></div><span id=\"title\">${this.title}</span></div>\r\n                <div class=\"content\">\r\n                    <div class=\"inner\">\r\n                    <slot></slot>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        this.template_fragment = document.createRange().createContextualFragment(template);\r\n        this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n\r\n        this.header_el = this.shadowRoot!.querySelector(\".header\") as HTMLDivElement;\r\n        this.arrow_el = this.shadowRoot!.querySelector(\".header>.arrow\") as HTMLDivElement;\r\n        this.title_el = this.shadowRoot!.querySelector(\"#title\") as HTMLSpanElement;\r\n        \r\n        this.content_el = this.shadowRoot!.querySelector(\".content\") as HTMLDivElement;\r\n\r\n\r\n    }\r\n\r\n\r\n    connectedCallback(){\r\n\r\n        if(this.closed)\r\n        {\r\n            this.header_el.setAttribute(\"closed\", \"true\");\r\n            this.content_el.setAttribute(\"closed\", \"true\");\r\n            this.arrow_el.classList.add(\"closed\");\r\n            this.header_el.classList.add(\"closed\");\r\n            this.content_el.classList.add(\"closed\");\r\n\r\n        }\r\n        this.header_el.addEventListener(\"click\", (event : MouseEvent)=>{\r\n            this.arrow_el.classList.toggle(\"closed\");\r\n            this.header_el.classList.toggle(\"closed\");\r\n            this.content_el.classList.toggle(\"closed\");\r\n\r\n            if(this.header_el.classList.contains(\"closed\"))\r\n            {\r\n                this.closed = true;\r\n            }else{\r\n                this.closed = false;\r\n                let ev = new Event(\"open\");\r\n                this.dispatchEvent(ev);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get observedAttributes()\r\n    {\r\n        return ['title', 'closed'];\r\n    }\r\n\r\n    set title(val : string)\r\n    {\r\n        this._title = val;\r\n        if(this.title_el)\r\n        {\r\n            this.title_el.innerText = val;\r\n        }\r\n    }\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any) {\r\n        switch(name)\r\n        {\r\n            case 'title' :\r\n                this.title = newValue;\r\n                let span = this.shadowRoot?.querySelector(\".header>span\") as HTMLSpanElement;\r\n                span.innerText = newValue;\r\n                break;\r\n            case 'closed' :\r\n                if(newValue === \"\") this.closed = true;\r\n                else if(newValue === \"true\") this.closed = true;\r\n                else if(newValue === \"false\") this.closed = false;\r\n\r\n                if(this.closed)\r\n                {\r\n                    this.arrow_el.classList.add(\"closed\");\r\n                    this.header_el.classList.add(\"closed\");\r\n                    this.content_el.classList.add(\"closed\");\r\n                }else{\r\n                    this.arrow_el.classList.remove(\"closed\");\r\n                    this.header_el.classList.remove(\"closed\");\r\n                    this.content_el.classList.remove(\"closed\");\r\n                }\r\n                \r\n                break;\r\n            default : break;\r\n        }\r\n\r\n    }\r\n}\r\ncustomElements.define(\"gui-collapsible\", GuiCollapsible);", "function rgbToHsv(r, g, b) {\r\n\r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    const delta = max - min;\r\n\r\n    let h = 0, s = 0, v = max;\r\n\r\n    if (delta !== 0) {\r\n        s = delta / max;\r\n\r\n        if (max === r) {\r\n            h = (g - b) / delta + (g < b ? 6 : 0);\r\n        } else if (max === g) {\r\n            h = (b - r) / delta + 2;\r\n        } else if (max === b) {\r\n            h = (r - g) / delta + 4;\r\n        }\r\n\r\n        h /= 6;\r\n    }\r\n\r\n    return { h: Math.round(h * 360), s: Math.round(s * 100), v: Math.round(v * 100) };\r\n}\r\nfunction hsvToRgb(h, s, v) {\r\n    h /= 360;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const i = Math.floor(h * 6);\r\n    const f = h * 6 - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    let r, g, b;\r\n\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n\r\n    return { r, g, b };\r\n}\r\n\r\n\r\nexport class GuiColorPicker extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n    sample_el : HTMLDivElement;\r\n    dialog_el : HTMLDialogElement;\r\n\r\n    _value : number[] = []\r\n\r\n    _hsv_values : number[] = [0,0,0];\r\n    hsv_ranges : HTMLDivElement;\r\n    rgb_ranges : HTMLDivElement;\r\n\r\n    hue_range : HTMLInputElement;\r\n    sat_range : HTMLInputElement;\r\n    val_range : HTMLInputElement;\r\n\r\n    red_range : HTMLInputElement;\r\n    green_range : HTMLInputElement;\r\n    blue_range : HTMLInputElement;\r\n\r\n    mode_btn : HTMLButtonElement;\r\n    constructor(){\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n        const styles = String.raw`<style>\r\n\r\n            :host{\r\n                --track-height : 5px;\r\n                --thumb-size : 20px;\r\n            }\r\n            .clr_sample{\r\n                position : relative;\r\n                width : calc(100% - 2px);\r\n                height : 100%;\r\n                cursor : pointer;\r\n\r\n                /* overflow : visible; */\r\n                margin : 1px;\r\n            }\r\n\r\n            .clr_sample:hover{\r\n                outline : 1px solid white !important;\r\n            }\r\n\r\n            #clr_dialog{\r\n                z-index : 10;\r\n                position : absolute;\r\n                padding : 2.5em;\r\n                border : none;\r\n                border-radius : var(--border-radius,5px);\r\n            }\r\n\r\n            input[type=\"range\"]\r\n            {\r\n                display : block;\r\n                width : 250px;\r\n            }\r\n\r\n            .hidden{\r\n                display : none;\r\n            }\r\n\r\n            /** Cross browser style */\r\n/* Reset default styles */\r\ninput[type=\"range\"] {\r\n  -webkit-appearance: none;\r\n  -moz-apperance: none;\r\n  appearance: none;\r\n  margin: 10px 0;\r\n  /* width: 100%; */\r\n}\r\n\r\n/* Webkit (Chrome, Safari, Opera) */\r\ninput[type=\"range\"]::-webkit-slider-runnable-track {\r\n  height: var(--track-height);\r\n  background: #ddd;\r\n  border: 1px solid #ccc;\r\n  border-radius: var(--border-radius, 2px);\r\n}\r\n\r\ninput[type=\"range\"]::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  width: var(--thumb-size);\r\n  height: var(--thumb-size);\r\n  background: #3498db;\r\n  /* border: 1px solid #2980b9; */\r\n  border-radius: 50%;\r\n  margin-top: calc(var(--thumb-size) /2.0 * -1 + (var(--track-height) / 2.0) - 1px);\r\n}\r\n\r\n/* Firefox */\r\ninput[type=\"range\"]::-moz-range-track {\r\n  height: var(--track-height);\r\n  background: #ddd;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\ninput[type=\"range\"]::-moz-range-thumb {\r\n  width: 20px;\r\n  height: 20px;\r\n  background: #3498db;\r\n  border: 1px solid #2980b9;\r\n  border-radius: 50%;\r\n}\r\n\r\n/* Edge and IE */\r\ninput[type=\"range\"]::-ms-track {\r\n  height: 8px;\r\n  background: #ddd;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\ninput[type=\"range\"]::-ms-thumb {\r\n  width: 20px;\r\n  height: 20px;\r\n  background: #3498db;\r\n  border: 1px solid #2980b9;\r\n  border-radius: 50%;\r\n}\r\n\r\n/* General styling */\r\ninput[type=\"range\"]:focus {\r\n  outline: none;\r\n}\r\n\r\ninput[type=\"range\"]:focus::-webkit-slider-runnable-track {\r\n  background: #ccc;\r\n}\r\n\r\ninput[type=\"range\"]:focus::-moz-range-track {\r\n  background: #ccc;\r\n}\r\n\r\ninput[type=\"range\"]:focus::-ms-track {\r\n  background: #ccc;\r\n}\r\n        </style>`;\r\n        \r\n        const template = String.raw`\r\n\r\n            ${styles}\r\n            \r\n\r\n            <div class=\"clr_sample\"></div>\r\n            <dialog id=\"clr_dialog\">\r\n                <!-- <div class=\"bg\" ></div> -->\r\n\r\n                <div id=\"hsv_ranges\">\r\n                    <label for=\"hue_range\" >Hue<input type=\"range\" id=\"hue_range\" step=\"0.001\" max=\"360\"/></label>\r\n                    <label for=\"sat_range\" >Sat<input type=\"range\" id=\"sat_range\"  step=\"0.001\"  max =\"100\"/></label>\r\n                    <label for=\"val_range\" >Value<input type=\"range\" id=\"val_range\"  step=\"0.001\" max=\"100\"/></label>\r\n                </div>\r\n                <div id=\"rgb_ranges\" class=\"hidden\">\r\n                    <label for=\"red_range\" >R<input type=\"range\" id=\"red_range\" step=\"0.001\" max=\"1.0\"/></label>\r\n                    <label for=\"green_range\" >G<input type=\"range\" id=\"green_range\"  step=\"0.001\"  max =\"1.0\"/></label>\r\n                    <label for=\"blue_range\" >B<input type=\"range\" id=\"blue_range\"  step=\"0.001\" max=\"1.0\"/></label>\r\n                </div>\r\n                <button id=\"mode_btn\">Mode</button>\r\n                <form method=\"dialog\">\r\n                    <button>OK</button>\r\n                </form>\r\n            </dialog>\r\n\r\n        `;\r\n        this.template_fragment = document.createRange().createContextualFragment(template);\r\n        this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n\r\n        this.hsv_ranges = this.shadowRoot?.querySelector(\"#hsv_ranges\") as HTMLDivElement;\r\n        \r\n        this.hue_range = this.shadowRoot?.querySelector(\"#hue_range\") as HTMLInputElement;\r\n        this.sat_range = this.shadowRoot?.querySelector(\"#sat_range\") as HTMLInputElement;\r\n        this.val_range = this.shadowRoot?.querySelector(\"#val_range\") as HTMLInputElement;\r\n        \r\n        this.hue_range.addEventListener(\"input\", (event : Event)=>{\r\n            let rgb = hsvToRgb(parseFloat(this.hue_range.value), parseFloat(this.sat_range.value), parseFloat(this.val_range.value))\r\n            this.value = [rgb.r, rgb.g, rgb.b];\r\n        });\r\n        this.sat_range.addEventListener(\"input\", (event : Event)=>{\r\n            let rgb = hsvToRgb(parseFloat(this.hue_range.value), parseFloat(this.sat_range.value), parseFloat(this.val_range.value))\r\n            this.value = [rgb.r, rgb.g, rgb.b];\r\n        });\r\n        this.val_range.addEventListener(\"input\", (event : Event)=>{\r\n            let rgb = hsvToRgb(parseFloat(this.hue_range.value), parseFloat(this.sat_range.value), parseFloat(this.val_range.value))\r\n            this.value = [rgb.r, rgb.g, rgb.b];\r\n        }); \r\n\r\n        this.rgb_ranges = this.shadowRoot?.querySelector(\"#rgb_ranges\") as HTMLDivElement;\r\n        \r\n        this.red_range = this.shadowRoot?.querySelector(\"#red_range\") as HTMLInputElement;\r\n        this.green_range = this.shadowRoot?.querySelector(\"#green_range\") as HTMLInputElement;\r\n        this.blue_range = this.shadowRoot?.querySelector(\"#blue_range\") as HTMLInputElement;\r\n\r\n        this.red_range.addEventListener(\"input\", (event : Event)=>{\r\n            let r = parseFloat(this.red_range.value);\r\n            let g = parseFloat(this.green_range.value);\r\n            let b = parseFloat(this.blue_range.value);\r\n            this.value = [r, g, b];\r\n        });\r\n        this.green_range.addEventListener(\"input\", (event : Event)=>{\r\n            let r = parseFloat(this.red_range.value);\r\n            let g = parseFloat(this.green_range.value);\r\n            let b = parseFloat(this.blue_range.value);\r\n            this.value = [r, g, b];\r\n        });\r\n        this.blue_range.addEventListener(\"input\", (event : Event)=>{\r\n            let r = parseFloat(this.red_range.value);\r\n            let g = parseFloat(this.green_range.value);\r\n            let b = parseFloat(this.blue_range.value);\r\n            this.value = [r, g, b];\r\n        }); \r\n\r\n        this.mode_btn = this.shadowRoot?.querySelector(\"#mode_btn\") as HTMLButtonElement;\r\n        this.sample_el = this.shadowRoot?.querySelector(\".clr_sample\") as HTMLDivElement;\r\n        this.dialog_el = this.shadowRoot?.querySelector(\"#clr_dialog\") as HTMLDialogElement;\r\n        this.sample_el.addEventListener(\"click\", ()=>{\r\n            // console.log(this.value);\r\n            let hsv = rgbToHsv(this.value[0],this.value[1], this.value[2]);\r\n            // console.log(hsv);\r\n            this.hue_range.value = hsv.h.toString();\r\n            this.sat_range.value = hsv.s.toString();\r\n            this.val_range.value = hsv.v.toString();\r\n\r\n            this.red_range.value = this.value[0].toString();\r\n            this.green_range.value = this.value[1].toString();\r\n            this.blue_range.value = this.value[2].toString();\r\n            \r\n            this.dialog_el.showModal();\r\n        });\r\n\r\n        this.dialog_el.addEventListener('click', (event) =>{\r\n            var rect = this.dialog_el.getBoundingClientRect();\r\n            var isInDialog=(rect.top <= event.clientY && event.clientY <= rect.top + rect.height\r\n              && rect.left <= event.clientX && event.clientX <= rect.left + rect.width);\r\n            if (!isInDialog) {\r\n                this.dialog_el.close();\r\n            }\r\n        });\r\n\r\n        this.mode_btn.addEventListener(\"click\", ()=>{\r\n            this.toggleMode();\r\n        })\r\n    }\r\n\r\n\r\n    toggleMode()\r\n    {\r\n        let hsv = rgbToHsv(this.value[0],this.value[1], this.value[2]);\r\n        // console.log(hsv);\r\n        this.hue_range.value = hsv.h.toString();\r\n        this.sat_range.value = hsv.s.toString();\r\n        this.val_range.value = hsv.v.toString();\r\n\r\n        this.red_range.value = this.value[0].toString();\r\n        this.green_range.value = this.value[1].toString();\r\n        this.blue_range.value = this.value[2].toString();\r\n\r\n        this.hsv_ranges.classList.toggle(\"hidden\");\r\n        this.rgb_ranges.classList.toggle(\"hidden\");\r\n    }\r\n    connectedCallback(){\r\n    }\r\n\r\n\r\n    static get observedAttributes(){\r\n        return [];\r\n    }\r\n\r\n\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any) {\r\n    \r\n    }\r\n\r\n    get value()\r\n    {\r\n        return this._value;\r\n    }\r\n\r\n    set value(values : number[])\r\n    {\r\n        this._value = values;\r\n        this.sample_el.style.backgroundColor = `rgb(${values[0] * 255},${values[1] * 255},${values[2] * 255})`;\r\n        // this.dispatchEvent(new Event(\"change\"));\r\n    }\r\n}\r\ncustomElements.define(\"gui-color-picker\", GuiColorPicker);", "export class GuiCombobox extends HTMLElement {\r\n  template_fragment: DocumentFragment;\r\n\r\n  _label: string = \"\";\r\n  label_el: HTMLLabelElement;\r\n  wrapper: HTMLDivElement;\r\n\r\n  _value: string = \"\";\r\n  _selectedIndex: number = 0;\r\n\r\n  options: Array<HTMLOptionElement> = [];\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n    const styles = String.raw`<style>\r\n            .wrapper{\r\n              display : grid;\r\n              grid-template-columns : var(--label-width) 1fr;\r\n              height : 30px;\r\n            }\r\n\r\n            label{\r\n              display : flex;\r\n              align-items : center;\r\n              \r\n              position : relative;\r\n              outline : 1px solid rgba(255,255,255,0.1);\r\n              height : 100%;\r\n              flex : 0.5;\r\n\r\n              border-radius : 3px 0 0 3px;\r\n            }\r\n\r\n            select{\r\n              border : 0;\r\n              height : 31px;\r\n              line-height : 30px;\r\n              flex : 1;\r\n              position : relative;\r\n              display : block;\r\n              color : #222;\r\n              background-color : white;\r\n              border-radius : 0 3px 3px 0;\r\n            }\r\n        </style>`;\r\n    const template = String.raw`\r\n            ${styles}\r\n            <div class=\"wrapper\">\r\n              <label for=\"list\">${this._label}</label>\r\n              <slot></slot>\r\n            </div>\r\n        `;\r\n    this.template_fragment = document\r\n      .createRange()\r\n      .createContextualFragment(template);\r\n    this.shadowRoot!.appendChild(this.template_fragment.cloneNode(true));\r\n    this.wrapper = this.shadowRoot!.querySelector(\".wrapper\") as HTMLDivElement;\r\n    this.label_el = this.shadowRoot!.querySelector(\"label\") as HTMLLabelElement;\r\n  }\r\n\r\n  set label(str: string) {\r\n    if (this.label_el) {\r\n      this._label = str;\r\n      this.label_el.innerText = str;\r\n    }\r\n\r\n    if (str === \"\") {\r\n      this.style.setProperty(\"--label-width\", \"0\");\r\n      // console.log(\"no label\");\r\n    }\r\n  }\r\n\r\n  set selectedIndex(index: number) {\r\n    this._selectedIndex = index;\r\n\r\n    if (index < this.options.length && index >= 0) {\r\n      if (this.options.length) {\r\n        this.value = this.options[index].innerText;\r\n      }\r\n    }\r\n    // this.dispatchEvent(new Event(\"change\"));\r\n  }\r\n\r\n  get selectedIndex(): number {\r\n    return this._selectedIndex;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  set value(str: string) {\r\n    this._value = str;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const slot = this.shadowRoot?.querySelector(\"slot\") as HTMLSlotElement;\r\n\r\n    // this.options = [];\r\n    slot?.addEventListener(\"slotchange\", () => {\r\n      for (let node of slot?.assignedNodes()) {\r\n        if (node.nodeName === \"OPTION\") {\r\n          let opt = node as HTMLOptionElement;\r\n\r\n          this.options.push(opt);\r\n\r\n          this.removeChild(opt);\r\n        }\r\n      }\r\n\r\n      this.updateOptions();\r\n    });\r\n  }\r\n\r\n  updateOptions() {\r\n    let old_select = this.shadowRoot!.querySelector(\".wrapper>select\");\r\n    if (old_select !== null) {\r\n      this.wrapper.removeChild(old_select);\r\n    }\r\n    let select: HTMLSelectElement = document.createElement(\r\n      \"select\"\r\n    ) as HTMLSelectElement;\r\n    select.id = \"list\";\r\n    select.addEventListener(\"change\", (event: any) => {\r\n      let sel = event.target as HTMLSelectElement;\r\n\r\n      this.value = sel.value;\r\n      this.selectedIndex = sel.selectedIndex;\r\n      let ev = new Event(\"change\", {});\r\n\r\n      this.dispatchEvent(ev);\r\n    });\r\n    for (let option of this.options) {\r\n      let opt = document.createElement(\"option\");\r\n      opt.innerText = option.innerText;\r\n\r\n      select.appendChild(opt);\r\n    }\r\n    this.wrapper.appendChild(select);\r\n\r\n    select.dispatchEvent(new Event(\"change\"));\r\n  }\r\n\r\n  addOption(label: string, value: string) {\r\n    let opt = document.createElement(\"option\");\r\n    opt.innerText = label;\r\n    if (value !== undefined) {\r\n      opt.value = value;\r\n    } else {\r\n      opt.value = label;\r\n    }\r\n    this.options.push(opt);\r\n\r\n    this.updateOptions();\r\n  }\r\n\r\n  resetOptions() {\r\n    this.options = [];\r\n    this.updateOptions();\r\n  }\r\n  static get observedAttributes() {\r\n    return [\"label\"];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\r\n    switch (name) {\r\n      case \"label\":\r\n        if (this.label_el) {\r\n          this.label_el.innerText = newValue;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\ncustomElements.define(\"gui-combobox\", GuiCombobox);\r\n", "export class GuiGroup extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n\r\n    _label : string = \"\";\r\n    label_el : HTMLDivElement;\r\n    constructor(){\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n        const styles = String.raw`<style>\r\n\r\n            .wrapper{\r\n                position : relative;\r\n                border-radius : 3px;\r\n                outline : 2px solid #ffffff10;\r\n                padding : 0.2em;\r\n                padding-top : 1.0em;\r\n                margin : 2px;\r\n                margin-top : 1.0em;\r\n                display : flex;\r\n                flex-direction : column;\r\n                gap : 0.5em;\r\n            }\r\n            \r\n            .label{\r\n                font-size : 0.8em;\r\n                position : absolute;\r\n\r\n                top : 0;\r\n                line-height : 1em;\r\n                background-color : #222222;\r\n                margin-top : -0.5em;\r\n            }\r\n\r\n            .hidden{\r\n                visibility : hidden;\r\n                display : none;\r\n            }\r\n        </style>`;\r\n        const template = String.raw`\r\n            ${styles}\r\n\r\n\r\n            <div class=\"wrapper\">\r\n            <div class=\"label\">${this._label}</div>\r\n            <slot></slot>\r\n\r\n            </div>\r\n\r\n        `;\r\n        this.template_fragment = document.createRange().createContextualFragment(template);\r\n        this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n\r\n        this.label_el = this.shadowRoot!.querySelector(\".label\") as HTMLDivElement;\r\n    }\r\n\r\n\r\n    connectedCallback(){\r\n    }\r\n\r\n\r\n    static get observedAttributes(){\r\n        return ['label'];\r\n    }\r\n\r\n    get label()\r\n    {\r\n        return this._label;\r\n    }\r\n    set label(str : string)\r\n    {\r\n        if(this.label_el)\r\n        {\r\n            this._label = str;\r\n            this.label_el.innerText = str;\r\n        }\r\n    }\r\n\r\n\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any) {\r\n        switch(name)\r\n        {\r\n            case 'label' : \r\n                this.label = newValue;\r\n                break;\r\n            default : break;\r\n        }\r\n    }\r\n}\r\ncustomElements.define(\"gui-group\", GuiGroup);", "import { GuiInputFloat } from \"./g2_input_float\";\r\nimport { GuiColorPicker } from \"./g2_color_picker\";\r\nexport class GuiInputColor extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n\r\n    label_el : HTMLDivElement;\r\n    default_scalar : number = 0;\r\n    _label : string = \"Color\";\r\n    \r\n    _value : number[] = [0,0,0];\r\n    _default_value : number[] = [0,0,0];\r\n    \r\n    picker_el : GuiColorPicker;\r\n    constructor()\r\n    {\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n\r\n        const styles = String.raw`\r\n            <style>\r\n\r\n                .wrapper{\r\n                    display : grid;\r\n                    grid-template-columns : var(--label-width) 1fr;\r\n                    font-size : 0.9em;\r\n                }\r\n\r\n                .label{\r\n                    font-family : sans-serif;\r\n                }\r\n\r\n                .floats{\r\n                    /* position : relative; */\r\n                    /* width : auto; */\r\n                }\r\n            </style>\r\n        `;\r\n\r\n        const template_str = String.raw`\r\n\r\n            ${styles}\r\n            <div class=\"wrapper\">\r\n                <div class=\"label\">${this._label}</div>\r\n                <div class=\"floats\" >\r\n                    <gui-color-picker></gui-color-picker>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        this.template_fragment = document.createRange().createContextualFragment(template_str);\r\n        this.shadowRoot!.appendChild(this.template_fragment.cloneNode(true));\r\n    \r\n        this.label_el = this.shadowRoot!.querySelector(\".label\") as HTMLDivElement; \r\n\r\n        this.picker_el = this.shadowRoot!.querySelector(\"gui-color-picker\") as GuiColorPicker;\r\n        this.picker_el.addEventListener(\"change\", (event : Event)=>{\r\n            // console.log(this.picker_el.value);\r\n            this.value = this.picker_el.value;\r\n        });\r\n        Promise.all([\r\n            customElements.whenDefined(\"gui-color-picker\")\r\n        ]).then(()=>{\r\n            this.picker_el.value = this.value;\r\n        });\r\n        \r\n    }\r\n\r\n    connectedCallback()\r\n    {\r\n    }\r\n\r\n    static get observedAttributes()\r\n    {\r\n        return [\"default_scalar\", \"label\"];\r\n    }\r\n\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any)\r\n    {\r\n        switch(name)\r\n        {\r\n            case 'default_scalar' :\r\n                this.default_scalar = parseFloat(newValue);\r\n                this.value = [this.default_scalar, this.default_scalar, this.default_scalar];\r\n                break;\r\n            case 'label' :\r\n                this.label = newValue;\r\n                this.label_el.innerText = newValue;\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n\r\n    get value() : number[]{\r\n        return this._value;\r\n    }\r\n\r\n    set value(val : number[])\r\n    {\r\n        this._value = val;\r\n    }\r\n\r\n    set default_value(val : number[])\r\n    {\r\n        this._default_value = val;\r\n    }\r\n\r\n    set label(str : string)\r\n    {\r\n        this._label = str;\r\n        this.label_el.innerText = str;\r\n    }\r\n\r\n}\r\n\r\n\r\ncustomElements.define(\"gui-input-color\", GuiInputColor);", "export class GuiInputFloat extends HTMLElement {\r\n\r\n    _value: number;\r\n    value_preview: number = 0;\r\n    value_offset: number = 0;\r\n    _default_value: number = 0;\r\n\r\n    old_value: number = 0;\r\n    new_value: number = 0;\r\n\r\n    _label: string = \"\";\r\n    label_el: HTMLDivElement;\r\n    _color: string = \"\";\r\n    styles: string;\r\n    value_input: HTMLInputElement;\r\n    number_input: HTMLDivElement;\r\n    template_fragment: DocumentFragment;\r\n\r\n    is_mouse_down: boolean;\r\n    is_dragging: boolean;\r\n\r\n    drag_start_pos: number = 0;\r\n    ctrl_pressed: boolean = false;\r\n    shift_pressed: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.attachShadow({ mode: \"open\" });\r\n        this._value = 0.0;\r\n        this.label = \"X\";\r\n        this.color = \"grey\";\r\n\r\n        this.is_mouse_down = false;\r\n        this.is_dragging = false;\r\n\r\n        this._label = \"wtf ?\";\r\n        this.styles = String.raw`\r\n            <style>\r\n\r\n            :host{\r\n                --padding-top : 0.3em;\r\n                --padding-bottom : 0.3em;\r\n                --padding-left : 0.15em;\r\n                --padding-right : 0.15em;\r\n\r\n                display : flex;\r\n                flex : 1.0;\r\n                box-sizing : border-box;\r\n            }\r\n\r\n            .wrapper{\r\n                position : relative;\r\n                display : grid;\r\n                grid-template-columns : var(--label-width) 1fr;\r\n                align-items: stretch;\r\n                justify-items: stretch;\r\n                width : max-content;\r\n                font-size : 0.9rem;\r\n                flex : 1.0;\r\n            }\r\n\r\n            .label{\r\n                color : white;\r\n                position : relative;\r\n                padding-left : 0.5em;\r\n                padding-right : 0.5em;\r\n                background-color : ${this._color};\r\n                border-radius : 2px 0 0 2px;\r\n                vertical-align : middle;\r\n                padding-top : var(--padding-top);\r\n                padding-bottom : var(--padding-bottom);\r\n                user-select : none;\r\n\r\n                cursor : e-resize;   \r\n\r\n                display : flex;\r\n                align-items : center;\r\n                justify-content : center;\r\n\r\n                \r\n\r\n            }\r\n\r\n            .label span{\r\n                opacity : 0.8;     \r\n                display : block;\r\n                align-items : center;\r\n                justify-content : center;\r\n\r\n                overflow : hidden;\r\n                text-overflow : ellipsis;    \r\n                white-space: nowrap;                       \r\n            }\r\n\r\n            .value_div{\r\n                flex : 1.0;\r\n                \r\n                position : relative;\r\n                /* overflow : hidden; */\r\n                border-radius : 0 2px 2px 0;\r\n                background-color : #eee;\r\n                padding-top : var(--padding-top);\r\n                padding-bottom : var(--padding-bottom);\r\n                /* padding-left : var(--padding-left); */\r\n                /* width : 100%; */\r\n                \r\n            }\r\n\r\n            input{\r\n                display : block;\r\n                color : #222;\r\n                font-weight : bold;\r\n                height : calc(100% - 2px );\r\n                max-width : 9ch;\r\n                /* min-width : 5ch; */\r\n                border : none;\r\n                height: max-content;\r\n                background-color : transparent;\r\n            }\r\n\r\n            .number_div{\r\n                min-width : 6ch;\r\n            }\r\n\r\n            </style>        \r\n        `;\r\n        const template = String.raw`\r\n\r\n            ${this.styles}\r\n\r\n            <div class=\"wrapper\" oncontextmenu=\"return false;\">\r\n                <div class=\"label\" title=\"${this._label}\"><span>${this._label}</span></div>\r\n                <div class=\"value_div\">\r\n                    <input type=number step=\"0.1\" value=${this.value} />\r\n                    <!-- <div class=\"number_div\" contenteditable> -->\r\n                </div>\r\n            <div>\r\n        `;\r\n\r\n        this.template_fragment = document.createRange().createContextualFragment(template);\r\n        this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n\r\n        this.label_el = this.shadowRoot!.querySelector(\".label\") as HTMLDivElement;\r\n\r\n        this.value_input = this.shadowRoot!.querySelector(\"input\") as HTMLInputElement;\r\n\r\n    }\r\n\r\n    connectedCallback() {\r\n\r\n        document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n            if (event.ctrlKey) {\r\n                this.ctrl_pressed = true;\r\n            }\r\n            if (event.shiftKey) {\r\n                this.shift_pressed = true;\r\n            }\r\n        })\r\n        document.addEventListener(\"keyup\", (event: KeyboardEvent) => {\r\n\r\n            if (event.key == \"Control\") {\r\n                this.ctrl_pressed = false;\r\n\r\n            }\r\n            if (event.key == \"Shift\") {\r\n                this.shift_pressed = false;\r\n            }\r\n        })\r\n        this.value_input.addEventListener(\"input\", (event: Event) => {\r\n            this._value = parseFloat(this.value_input.value);\r\n\r\n            this.triggerChange();\r\n        })\r\n\r\n        this.value_input.addEventListener(\"keypress\", (event: KeyboardEvent) => {\r\n            if (event.key === \"Enter\") {\r\n                this.value_input.blur();\r\n                this.triggerChange();\r\n            }\r\n        })\r\n\r\n        this.value_input.addEventListener(\"blur\", (event: Event) => {\r\n            this.triggerChange();\r\n        })\r\n\r\n        this.label_el.addEventListener(\"mousedown\", (event: MouseEvent) => {\r\n\r\n            this.value_offset = 0;\r\n            if (event.button === 0) {\r\n                this.is_mouse_down = true;\r\n                this.drag_start_pos = event.clientX;\r\n            } else if (event.button === 2) {\r\n                this.value_input.value = this._default_value.toString();\r\n                this.value = this._default_value;\r\n            }\r\n        })\r\n\r\n        document.addEventListener(\"mouseup\", (event: MouseEvent) => {\r\n            this.is_mouse_down = false;\r\n            if (event.button === 0) {\r\n                if (this.value_preview !== 0) {\r\n                    this.value = this.value_preview;\r\n                    this.value_preview = 0;\r\n                }\r\n            }\r\n        })\r\n\r\n        document.addEventListener(\"mousemove\", (event: MouseEvent) => {\r\n\r\n            if (this.is_mouse_down) {\r\n                let diff = (event.pageX - this.drag_start_pos);\r\n                let mult = 0.1;\r\n                if (this.ctrl_pressed) mult *= 0.1;\r\n                else if (this.shift_pressed) mult *= 5.0;\r\n\r\n                diff *= mult;\r\n                this.value_input.value = (this.value + diff).toString();\r\n                this.value_preview = (this.value + diff);\r\n                this.value_offset = diff;\r\n\r\n                this.value += diff;\r\n                this.triggerChange();\r\n\r\n                /** RESET */\r\n                this.drag_start_pos = event.pageX;\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    static get observedAttributes() {\r\n        return ['label', 'color', \"default_value\"];\r\n    }\r\n\r\n    triggerChange() {\r\n        let ev = new Event(\"change\", {\r\n            // bubbles : true,\r\n            // composed : false,\r\n\r\n        });\r\n\r\n        this.dispatchEvent(ev);\r\n    }\r\n    set value(val: number) {\r\n        this._value = val;\r\n        this.value_input.value = val.toString();\r\n        this.triggerChange();\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set default_value(val: number) {\r\n        this._default_value = val;\r\n    }\r\n\r\n    set color(clr: string) {\r\n        this._color = clr;\r\n    }\r\n\r\n    set label(str: string) {\r\n        this._label = str;\r\n        if (this.label_el) {\r\n            this.label_el.innerHTML = `<span>${str}</span>`;\r\n            this.label_el.setAttribute(\"title\", str);\r\n        }\r\n    }\r\n\r\n\r\n    attributeChangedCallback(name: string, oldValue: any, newValue: any) {\r\n        switch (name) {\r\n            case 'color':\r\n                this.label_el.style.backgroundColor = newValue;\r\n\r\n\r\n                break;\r\n            case 'label':\r\n                this.label = newValue;\r\n                break;\r\n            case 'default_value':\r\n                this._default_value = parseFloat(newValue);\r\n                this.value = this._default_value;\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncustomElements.define(\"gui-input-float\", GuiInputFloat);", "export class GuiInputRange extends HTMLElement {\r\n  template_fragment: DocumentFragment;\r\n  _label: string = \"hey\";\r\n  input_el: HTMLInputElement;\r\n  txt_div: HTMLDivElement;\r\n  on_change: Function = () => {};\r\n  on_click: Function = () => {};\r\n\r\n  _value: number = 42;\r\n  _min: number = 0.0;\r\n  _max: number = 1.0;\r\n  _step: number = 0.01;\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n    const styles = String.raw`<style>\r\n\r\n            :host{\r\n                width : 100%;\r\n            }\r\n            .wrapper{\r\n                position : relative;\r\n                display : grid;\r\n                grid-template-columns : var(--label-width) 1fr;\r\n                align-items: center;\r\n                justify-items: stretch;\r\n                width : 100%;\r\n                font-size : 0.9rem;\r\n                flex : 1.0;\r\n            }       \r\n            \r\n            input[type=range]{\r\n                width : 100%;\r\n                margin : 0.8em 0;\r\n                padding : 0;\r\n            }\r\n\r\n            .value_div{\r\n                display : flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n\r\n                \r\n            }\r\n\r\n            .text_value{\r\n              width : 50px;\r\n              text-align : center;\r\n            }\r\n        </style>`;\r\n    const template = String.raw`\r\n            ${styles}\r\n            <div class=\"wrapper\">\r\n<div class=\"label\" title=\"${this.label}\"><span>${this.label}</span></div>\r\n                <div class=\"value_div\">\r\n                    <input type=range min=\"${this._min}\" max=\"${this._max}\" step=\"${this._step}\" value=\"${this._value}\" /><div class=\"text_value\">${this._value}</div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    this.template_fragment = document\r\n      .createRange()\r\n      .createContextualFragment(template);\r\n    this.shadowRoot!.appendChild(this.template_fragment.cloneNode(true));\r\n    this.input_el = this.shadowRoot!.querySelector(\"input\") as HTMLInputElement;\r\n    this.txt_div = this.shadowRoot!.querySelector(\r\n      \".text_value\"\r\n    ) as HTMLDivElement;\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.input_el.onclick = (event) => {\r\n      this.on_click(event);\r\n    };\r\n    this.input_el.oninput = (event) => {\r\n      this.on_change(event);\r\n      this._value = parseFloat(this.input_el.value);\r\n      this.txt_div.textContent = \"\" + this._value;\r\n    };\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return [\"label\", \"min\", \"max\", \"step\", \"value\"];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\r\n    switch (name) {\r\n      case \"label\":\r\n        this._label = newValue;\r\n        break;\r\n      case \"min\":\r\n        this._min = parseFloat(newValue);\r\n        this.input_el.setAttribute(\"min\", \"\" + newValue);\r\n        break;\r\n      case \"max\":\r\n        this._max = parseFloat(newValue);\r\n        this.input_el.setAttribute(\"max\", \"\" + newValue);\r\n        break;\r\n      case \"step\":\r\n        this._step = parseFloat(newValue);\r\n        this.input_el.setAttribute(\"step\", \"\" + newValue);\r\n        break;\r\n      case \"value\":\r\n        this._value = parseFloat(newValue);\r\n        this.input_el.setAttribute(\"value\", newValue);\r\n        this.txt_div.textContent = newValue;\r\n        this.input_el.value = newValue;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  get min() {\r\n    return this._min;\r\n  }\r\n  get max() {\r\n    return this._max;\r\n  }\r\n\r\n  get step() {\r\n    return this._step;\r\n  }\r\n  get value() {\r\n    return this._value;\r\n  }\r\n  get label() {\r\n    return this._label;\r\n  }\r\n  triggerChange() {\r\n    let ev = new Event(\"change\", {\r\n      // bubbles : true,\r\n      // composed : false,\r\n    });\r\n\r\n    this.dispatchEvent(ev);\r\n  }\r\n  set min(val: number) {\r\n    this._min = val;\r\n    this.input_el.min = \"\" + val;\r\n  }\r\n  set max(val: number) {\r\n    this._max = val;\r\n    this.input_el.max = \"\" + val;\r\n  }\r\n  set step(val: number) {\r\n    this._step = val;\r\n    this.input_el.step = \"\" + val;\r\n  }\r\n  set value(val: number) {\r\n    this._value = val;\r\n    this.input_el.setAttribute(\"value\", \"\" + val);\r\n    this.txt_div.textContent = \"\" + val;\r\n    this.triggerChange();\r\n  }\r\n\r\n  set label(str: string) {\r\n    this._label = str;\r\n    (this.shadowRoot?.querySelector(\".label span\") as HTMLElement).textContent =\r\n      str;\r\n  }\r\n}\r\ncustomElements.define(\"gui-input-range\", GuiInputRange);\r\n", "import { GuiInputFloat } from \"./g2_input_float\";\r\nexport class GuiInputVector extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n\r\n    label_el : HTMLDivElement;\r\n    input_x : GuiInputFloat;\r\n    input_y : GuiInputFloat;\r\n    input_z : GuiInputFloat;\r\n    default_scalar : number = 0;\r\n    _label : string = \"Vector\";\r\n    \r\n    _value : number[] = [0,0,0];\r\n    _default_value : number[] = [0,0,0];\r\n    constructor()\r\n    {\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n\r\n        const styles = String.raw`\r\n            <style>\r\n\r\n                :host{\r\n                    /* --label-width : 200px;  */\r\n                }\r\n                .wrapper{\r\n                    /* margin-top : 3px; */\r\n                    font-size : 0.9em;\r\n                    display : grid;\r\n                    grid-template-columns : var(--label-width) 1fr;\r\n                    align-items: center;\r\n\r\n                }\r\n\r\n                .label{\r\n                    font-family : sans-serif;\r\n                }\r\n\r\n\r\n                .floats{\r\n                    display : flex; \r\n                    gap:3px;\r\n                }\r\n/* \r\n                .floats ~ .wrapper{\r\n                    flex : 1.0;\r\n                } */\r\n            </style>\r\n        `;\r\n\r\n        const template_str = String.raw`\r\n\r\n            ${styles}\r\n            <div class=\"wrapper\">\r\n                <div class=\"label\">${this._label}</div>\r\n                <div class=\"floats\" style=\"\">\r\n                    <gui-input-float id=\"input_x\" color=\"red\"   label=\"x\" default_value=\"${this.default_scalar}\" style=\"--label-width : 20px;\"> </gui-input-float>\r\n                    <gui-input-float id=\"input_y\" color=\"green\" label=\"y\" default_value=\"${this.default_scalar}\" style=\"--label-width : 20px;\"></gui-input-float>\r\n                    <gui-input-float id=\"input_z\" color=\"blue\"  label=\"z\" default_value=\"${this.default_scalar}\" style=\"--label-width : 20px;\"></gui-input-float>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        this.template_fragment = document.createRange().createContextualFragment(template_str);\r\n        this.shadowRoot!.appendChild(this.template_fragment.cloneNode(true));\r\n    \r\n        this.label_el = this.shadowRoot!.querySelector(\".label\") as HTMLDivElement; \r\n        this.input_x = this.shadowRoot!.querySelector(\"#input_x\") as GuiInputFloat;\r\n        this.input_y = this.shadowRoot!.querySelector(\"#input_y\") as GuiInputFloat;\r\n        this.input_z = this.shadowRoot!.querySelector(\"#input_z\") as GuiInputFloat;\r\n            \r\n        Promise.all([ \r\n            customElements.whenDefined(\"gui-input-float\")\r\n        ]).then(()=>{\r\n            let label_x = this.input_x.shadowRoot!.querySelector(\".wrapper .label span\") as HTMLSpanElement;\r\n            let label_y = this.input_y.shadowRoot!.querySelector(\".wrapper .label span\") as HTMLSpanElement;\r\n            let label_z = this.input_z.shadowRoot!.querySelector(\".wrapper .label span\") as HTMLSpanElement;\r\n            label_x.style.overflow = \"unset\";\r\n            label_y.style.overflow = \"unset\";\r\n            label_z.style.overflow = \"unset\";\r\n        });\r\n        \r\n        this.input_x.addEventListener(\"change\", (event : Event)=>{\r\n            let val = (event.target! as GuiInputFloat).value;\r\n            this.value[0] = val;\r\n            this.dispatchEvent(new Event(\"change\"));\r\n        })\r\n        this.input_y.addEventListener(\"change\", (event : Event)=>{\r\n            let val = (event.target! as GuiInputFloat).value;\r\n            this.value[1] = val;\r\n            this.dispatchEvent(new Event(\"change\"));\r\n        })\r\n        this.input_z.addEventListener(\"change\", (event : Event)=>{\r\n            let val = (event.target! as GuiInputFloat).value;\r\n            this.value[2] = val;\r\n            this.dispatchEvent(new Event(\"change\"));\r\n        })\r\n\r\n    }\r\n\r\n    connectedCallback()\r\n    {\r\n        this.input_x._default_value = this.default_scalar;\r\n        this.input_y._default_value = this.default_scalar;\r\n        this.input_z._default_value = this.default_scalar;\r\n        \r\n    }\r\n\r\n    static get observedAttributes()\r\n    {\r\n        return [\"default_scalar\", \"label\"];\r\n    }\r\n\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any)\r\n    {\r\n        switch(name)\r\n        {\r\n            case 'default_scalar' :\r\n                this.default_scalar = parseFloat(newValue);\r\n                this.input_x.value = this.default_scalar;\r\n                this.input_y.value = this.default_scalar;\r\n                this.input_z.value = this.default_scalar;\r\n                break;\r\n            case 'label' :\r\n                this.label = newValue;\r\n                this.label_el.innerText = newValue;\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n\r\n    get value() : number[]{\r\n        return [this.input_x.value, this.input_y.value, this.input_z.value];\r\n    }\r\n\r\n    set value(val : number[])\r\n    {\r\n        console.log(\"setting values : \", val);\r\n        this.input_x.value = val[0];\r\n        this.input_y.value = val[1];\r\n        this.input_z.value = val[2];\r\n        this._value = val;\r\n    }\r\n\r\n    set default_value(val : number[])\r\n    {\r\n        this._default_value = val;\r\n        this.input_x.default_value = val[0];\r\n        this.input_y.default_value = val[1];\r\n        this.input_z.default_value = val[2];\r\n    }\r\n\r\n    set label(str : string)\r\n    {\r\n        this._label = str;\r\n        this.label_el.innerText = str;\r\n    }\r\n\r\n}\r\n\r\n\r\ncustomElements.define(\"gui-input-vector\", GuiInputVector);", "export class GuiPanel extends HTMLElement {\r\n  template_fragment: DocumentFragment;\r\n  wrapper_el: HTMLDivElement;\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n    const styles = String.raw`\r\n            <style>\r\n                .panel{\r\n                    --scrollbar-width : 8px;\r\n                    --scrollbar-track-color : transparent;\r\n                    --scrollbar-thumb-color : gray;\r\n                }\r\n                \r\n                        /* For WebKit browsers (Chrome, Safari) */\r\n                        ::-webkit-scrollbar {\r\n                            width: var(--scrollbar-width);\r\n                        }\r\n\r\n                        ::-webkit-scrollbar-thumb {\r\n                            background-color: var(--scrollbar-thumb-color);\r\n                            border-radius: 6px;\r\n                        }\r\n\r\n                        ::-webkit-scrollbar-track {\r\n                            background-color: var(--scrollbar-track-color);\r\n                        }\r\n\r\n                        /* For Firefox */\r\n                        * {\r\n                            scrollbar-color: var(--scrollbar-thumb-color) var(--scrollbar-track-color);\r\n                        }\r\n\r\n                        *::-webkit-scrollbar {\r\n                            width: var(--scrollbar-width);\r\n                        }\r\n\r\n                        *::-webkit-scrollbar-thumb {\r\n                            background-color: var(--scrollbar-thumb-color);\r\n                            border-radius: 6px;\r\n                        }\r\n\r\n                        *::-webkit-scrollbar-track {\r\n                            background-color: var(--scrollbar-track-color);\r\n                        }                \r\n                #wrapper{\r\n                    position : fixed;\r\n                    top : 0px;\r\n                    right : 0px;\r\n                    padding : 0.5em;\r\n                    padding-bottom : 0;\r\n                    padding-top : 0;\r\n\r\n                    box-shadow : -2px 2px 8px #0001;\r\n                    border-radius : 0 0 0 3px;\r\n                    height : 100%;\r\n                    max-height : 100%;\r\n                    min-width : 300px;\r\n                    color : white;\r\n                    background-color : #111;\r\n\r\n                    transition : transform;\r\n                    transition-duration : 0.1s;\r\n\r\n                    cursor: default;\r\n                    user-select : none;\r\n                }\r\n\r\n                #wrapper.left{\r\n                    left : 0px;\r\n                    right : unset;\r\n                }\r\n\r\n                #wrapper.hidden{\r\n                    transform : translate3d(100%,0,0 );\r\n                }\r\n                \r\n                #wrapper.left.hidden{\r\n                    \r\n                    transform : translate3d(-100%,0,0 );\r\n                }\r\n\r\n                .panel{\r\n                    position : relative;\r\n                    overflow-y : auto;\r\n                    height : calc(100% - 50px - 2em);\r\n                    width : 100%;\r\n                    padding-top : 2em;\r\n                }\r\n                .panel:after{\r\n                    content : \" \";\r\n                    position : absolute;\r\n                    width : 100%;\r\n                    height : 30px;\r\n                }\r\n\r\n                #wrapper .close_btn{\r\n                    position : relative;\r\n                    top : 0;\r\n                    cursor : pointer;\r\n                    height : calc(30px);\r\n                    margin-top : 5px;\r\n                    opacity : 0.5;\r\n                }\r\n\r\n                #wrapper.left .close_btn{\r\n                    right : 0px;\r\n                    width : 25px;\r\n                    margin-left : auto;\r\n                }\r\n    \r\n                #wrapper .close_btn:hover{\r\n                    opacity : 1.0;\r\n                }\r\n\r\n                #wrapper .close_btn::before{\r\n                    content : '';\r\n                    position : absolute;\r\n                    top : 0; \r\n                    left : 0;\r\n                    width : 4px;\r\n                    height : 100%;\r\n                    border-radius : 5px;\r\n                    background-color : #eee;\r\n                    transform-origin : 50% 50%;\r\n                    transform :  translateX(10px) rotate(45deg);\r\n                }\r\n                #wrapper .close_btn::after{\r\n                    content : '';\r\n                    position : absolute;\r\n                    top : 0; \r\n                    left : 0;\r\n                    width : 4px;\r\n                    height : 100%;\r\n                    border-radius : 5px;\r\n                    background-color : #eee;\r\n                    transform-origin : 50% 50%;\r\n                    transform : translateX(10px) rotate(-45deg);\r\n                }\r\n\r\n\r\n\r\n                #wrapper .open_btn{\r\n                    display : flex;\r\n                    align-items : center;\r\n                    justify-content : center;\r\n                    font-weight : bold;\r\n                    font-size : 2em;\r\n                    position : absolute;\r\n                    width : 25px;\r\n                    height : 25px;\r\n                    background-color : transparent; \r\n                    opacity : 0.5;\r\n                    filter : drop-shadow(2px 2px 2px pink);\r\n                    top : 0;\r\n                    left : 0;  \r\n                    z-index : 2;\r\n                    margin-left : -25px;\r\n                    visibility : hidden;\r\n                    cursor : pointer;\r\n                }\r\n                #wrapper .open_btn:hover{\r\n                    opacity : 0.9;\r\n                    color : red;\r\n                }\r\n\r\n                #wrapper.left .open_btn{\r\n                    left : unset;\r\n                    right : -25px;\r\n                }\r\n                #wrapper.hidden>.open_btn{\r\n                    visibility : visible;\r\n                }\r\n            </style>\r\n        `;\r\n\r\n    const template = String.raw`\r\n            \r\n            ${styles}\r\n            <!-- <div id=\"wrapper\" oncontextmenu=\"return false;\"> -->\r\n            <div id=\"wrapper\" >\r\n                <div class=\"open_btn\">&lt;</div>\r\n                <div class=\"close_btn\"></div>\r\n                <div class=\"panel\">\r\n                    <slot></slot>\r\n                </div>\r\n            </div>\r\n        `;\r\n    this.template_fragment = document\r\n      .createRange()\r\n      .createContextualFragment(template);\r\n    this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n\r\n    let close_btn = this.shadowRoot?.querySelector(\".close_btn\");\r\n    let open_btn = this.shadowRoot?.querySelector(\".open_btn\");\r\n    this.wrapper_el = this.shadowRoot?.querySelector(\r\n      \"#wrapper\"\r\n    ) as HTMLDivElement;\r\n    close_btn?.addEventListener(\"click\", (event: Event) => {\r\n      this.wrapper_el!.classList.add(\"hidden\");\r\n    });\r\n    open_btn?.addEventListener(\"click\", (event: Event) => {\r\n      this.wrapper_el!.classList.remove(\"hidden\");\r\n    });\r\n\r\n    document.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"h\") {\r\n        this.wrapper_el!.classList.toggle(\"hidden\");\r\n      }\r\n    });\r\n  }\r\n\r\n  connectedCallback() {}\r\n\r\n  static get observedAttributes() {\r\n    return [\"side\", \"closed\"];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\r\n    switch (name) {\r\n      case \"side\":\r\n        this.wrapper_el.classList.add(newValue);\r\n        break;\r\n      case \"closed\":\r\n        if (newValue === \"true\" || newValue === \"\") {\r\n          this.wrapper_el.classList.add(\"hidden\");\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  set side(val: string) {\r\n    // this._side = val;\r\n    this.wrapper_el.classList.add(val);\r\n  }\r\n}\r\n\r\ncustomElements.define(\"gui-panel\", GuiPanel);\r\n", "export class GuiRow extends HTMLElement {\r\n  template_fragment: DocumentFragment;\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n    const styles = String.raw`<style>\r\n\r\n        .wrapper{\r\n            outline : 1px solid rgba(255,255,255,0.1);\r\n            display : flex;\r\n            flex-direction : row;\r\n            flex-wrap : nowrap;\r\n            align-items : center;\r\n            justify-content : center;\r\n            gap : 0.5em;\r\n            width : 100%;\r\n        }\r\n\r\n        </style>`;\r\n    const template = String.raw`\r\n            ${styles}\r\n            <div class=\"wrapper\">\r\n                <slot></slot>\r\n            </div>\r\n        `;\r\n    this.template_fragment = document\r\n      .createRange()\r\n      .createContextualFragment(template);\r\n    this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n  }\r\n\r\n  connectedCallback() {}\r\n\r\n  static get observedAttributes() {\r\n    return [];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {}\r\n}\r\ncustomElements.define(\"gui-row\", GuiRow);\r\n", "export class GuiSeparator extends HTMLElement{\r\n    template_fragment : DocumentFragment;\r\n    constructor(){\r\n        super();\r\n        this.attachShadow({mode : \"open\"});\r\n        const styles = String.raw`<style>\r\n\r\n            hr{\r\n                opacity : 0.1;\r\n            }\r\n        </style>`;\r\n        const template = String.raw`\r\n            ${styles}\r\n            <hr>\r\n        `;\r\n        this.template_fragment = document.createRange().createContextualFragment(template);\r\n        this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n    }\r\n\r\n\r\n    connectedCallback(){\r\n    }\r\n\r\n\r\n    static get observedAttributes(){\r\n        return [];\r\n    }\r\n\r\n\r\n    attributeChangedCallback(name : string, oldValue : any, newValue : any) {\r\n    \r\n    }\r\n}\r\ncustomElements.define(\"gui-separator\", GuiSeparator);", "export class GuiSpacer extends HTMLElement {\r\n  template_fragment: DocumentFragment;\r\n  _height: number = 0;\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n    const styles = String.raw`<style>\r\n\r\n        div{\r\n            background-color : transparent;\r\n        }\r\n    </style>`;\r\n    const template = String.raw`\r\n            ${styles}\r\n            <div></div>\r\n        `;\r\n    this.template_fragment = document\r\n      .createRange()\r\n      .createContextualFragment(template);\r\n    this.shadowRoot?.appendChild(this.template_fragment.cloneNode(true));\r\n  }\r\n\r\n  connectedCallback() {}\r\n\r\n  static get observedAttributes() {\r\n    return [\"height\"];\r\n  }\r\n\r\n  get height() {\r\n    let css_height = this.getAttribute(\"height\");\r\n    return parseInt(css_height || \"0\");\r\n  }\r\n  set height(val: number) {\r\n    // console.log(val);\r\n    // this.height = val;\r\n    (this.shadowRoot?.querySelector(\"div\") as HTMLDivElement).style.height =\r\n      \"\" + val + \"px\";\r\n  }\r\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\r\n    switch (name) {\r\n      case \"height\":\r\n        this.height = newValue;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\ncustomElements.define(\"gui-spacer\", GuiSpacer);\r\n", "export class GuiTitle extends HTMLElement {\r\n  title: string = 'Hello, World!';\r\n\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' }); \r\n  }\r\n\r\n  connectedCallback() {\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.shadowRoot!.innerHTML = String.raw`\r\n      <style>\r\n        :host {\r\n          display: block;\r\n        }\r\n\r\n      </style>\r\n      <h2><slot></slot></h2>\r\n    `;\r\n  }\r\n}\r\n  \r\n// Register the custom element\r\ncustomElements.define('gui-title', GuiTitle);", "export { GuiAccordion } from \"./g2_accordion\";\r\nexport { GuiButton } from \"./g2_button\";\r\nexport { GuiCheckbox } from \"./g2_checkbox\";\r\nexport { GuiCollapsible } from \"./g2_collapsible\";\r\nexport { GuiColorPicker } from \"./g2_color_picker\";\r\nexport { GuiCombobox } from \"./g2_combobox\";\r\nexport { GuiGroup } from \"./g2_group\";\r\nexport { GuiInputColor } from \"./g2_input_color\";\r\nexport { GuiInputFloat } from \"./g2_input_float\";\r\nexport { GuiInputRange } from \"./g2_input_range\";\r\nexport { GuiInputVector } from \"./g2_input_vector\";\r\nexport { GuiPanel } from \"./g2_panel\";\r\nexport { GuiRow } from \"./g2_row\";\r\nexport { GuiSeparator } from \"./g2_separator\";\r\nexport { GuiSpacer } from \"./g2_spacer\";\r\nexport { GuiTitle } from \"./g2_title\";\r\n\r\nexport default {};\r\n"],
  "mappings": "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",
  "names": ["checkbox"]
}
